name: Benchmark Suite

on:
  workflow_call:
    inputs:
      bevy-dep:
        description: |
          If specified, replaces the dependency on Bevy in `Cargo.toml` with a custom TOML value.

          For instance, setting this value to `"0.14.1"` will update `Cargo.toml` to look like:

            [dependencies]
            bevy = "0.14.1"

          You can use this to depend on a specific branch, tag, fork, or even major release of
          Bevy. See <https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html> for
          more information.

          Please note that the input must be valid TOML and must not contain pipe `|` characters
          due to implementation details.
        required: false
        type: string
    outputs:
      # This is currently just the hash from `bench`, but it should be the same for `file-size`.
      bevy-hash:
        description: The Bevy commit hash that was benchmarked.
        value: ${{ jobs.bench.outputs.bevy-hash }}

env:
  # Force colorful output, even though we're running in Github Actions.
  CARGO_TERM_COLOR: always

jobs:
  bench:
    name: Run benchmarks
    runs-on: ubuntu-22.04
    outputs:
      bevy-hash: ${{ steps.bevy-hash.outputs.hash }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Configure Bevy revision
        if: ${{ inputs.bevy-dep }}
        env:
          BEVY_DEP: ${{ inputs.bevy-dep }}
        run: |
          # Update the Bevy dependency in `Cargo.toml` to specified value.
          sed -i "s|bevy = { git = \"https://github.com/bevyengine/bevy.git\" }|bevy = $BEVY_DEP|" Cargo.toml

      - name: Cache build files
        uses: Leafwing-Studios/cargo-cache@v2

      # Run benchmarks, piping output to both `results.txt` and stdout.
      - name: Run benchmarks
        run: cargo bench -- 2>&1 | tee results.txt

      # TODO: Extract into action.
      # TODO: Handle when it is not a Git repository.
      - name: Find Bevy commit hash
        id: bevy-hash
        run: |
          # Find the source property of Bevy, which returns something like:
          # "git+https://github.com/bevyengine/bevy.git#d659a1f7d506c5c6eba9dfe2a6e878a8c72ecef6"
          SOURCE=$(cargo metadata --format-version 1 | jq '.packages[] | select(.name == "bevy") | .source')

          echo Bevy source is $SOURCE.

          # Regex for a 40-character hexadecimal hash.
          REGEX="[a-f0-9]{40}"

          # Capture the hash from the source identifier.
          HASH=$(echo $SOURCE | grep --extended-regexp --only-matching $REGEX)

          echo Found hash is $HASH.

          echo hash=$HASH >> $GITHUB_OUTPUT

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: results.txt
          if-no-files-found: error

      - name: Upload Criterion report
        uses: actions/upload-artifact@v4
        with:
          name: criterion-report
          path: target/criterion
          if-no-files-found: error

  file-size:
    name: Track file size
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Configure Bevy revision
        if: ${{ inputs.bevy-dep }}
        env:
          BEVY_DEP: ${{ inputs.bevy-dep }}
        run: |
          # Update the Bevy dependency in `Cargo.toml` to specified value.
          sed -i "s|bevy = { git = \"https://github.com/bevyengine/bevy.git\" }|bevy = $BEVY_DEP|" Cargo.toml

      - name: Cache build files
        uses: Leafwing-Studios/cargo-cache@v2

      # Build all file-size binaries in release mode.
      - name: Build binaries
        run: cargo build --package file-size --profile file-size

      # TODO: Find Bevy hash and ensure it is equal to the one found in `bench`.

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: file-size
          path: |
            target/file-size/default
            target/file-size/minimal
            target/file-size/empty
          if-no-files-found: error
