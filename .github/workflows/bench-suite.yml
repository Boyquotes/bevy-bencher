name: Benchmark suite

on:
  workflow_call:
    inputs:
      self-hosted-runner:
        description: |
          If true, runs the benchmark job on a quiet self-hosted runner.

          This is desired if you need accurate benchmarks, since Github-provided runners are quite
          noisy. This is false by default, since there is a limited supply of self-hosted runners.

          This will not switch the `file-size` job to self-hosted, since file size is not
          performance-dependent.
        required: false
        default: false
        type: boolean
      bevy-dep:
        description: |
          If specified, replaces the dependency on Bevy in `Cargo.toml` with a custom TOML value.

          For instance, setting this value to `"0.14.1"` will update `Cargo.toml` to look like:

            [dependencies]
            bevy = "0.14.1"

          You can use this to depend on a specific branch, tag, fork, or even major release of
          Bevy. See <https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html> for
          more information.

          Please note that the input must be valid TOML and must not contain pipe `|` characters
          due to implementation details.
        required: false
        type: string
    outputs:
      # This is currently just the metadata from `bench`, but it should be the same for `file-size`.
      bevy-metadata:
        description: The version and source metadata of Bevy, formatted as JSON.
        value: ${{ jobs.bench.outputs.bevy-metadata }}

env:
  # Force colorful output, even though we're running in Github Actions.
  CARGO_TERM_COLOR: always

jobs:
  find-runner:
    name: Find runner label
    runs-on: ubuntu-22.04
    outputs:
      runner: ${{ steps.ubuntu.outputs.runner || steps.self-hosted.outputs.runner }}
    steps:
      - name: Output Ubuntu
        id: ubuntu
        if: ${{ !inputs.self-hosted-runner }}
        run: echo "runner=ubuntu-22.04" >> $GITHUB_OUTPUT

      - name: Output Self-Hosted
        id: self-hosted
        if: ${{ inputs.self-hosted-runner }}
        run: echo "runner=[self-hosted, Linux]" >> $GITHUB_OUTPUT

  bench:
    name: Run benchmarks
    needs: [find-runner]
    runs-on: ${{ needs.find-runner.outputs.runner }}
    outputs:
      bevy-metadata: ${{ steps.bevy-metadata.outputs.metadata }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Configure Bevy revision
        if: ${{ inputs.bevy-dep }}
        env:
          BEVY_DEP: ${{ inputs.bevy-dep }}
        run: |
          # Update the Bevy dependency in `Cargo.toml` to specified value.
          sed -i "s|bevy = { git = \"https://github.com/bevyengine/bevy.git\" }|bevy = $BEVY_DEP|" Cargo.toml

      - name: Cache build files
        uses: Leafwing-Studios/cargo-cache@v2

      - name: Install cargo-sweep and timestamp
        run: |
          cargo install cargo-sweep --force
          cargo sweep --stamp

      # Run benchmarks, piping output to both `results.txt` and stdout.
      - name: Run benchmarks
        run: cargo bench -- 2>&1 | tee results.txt

      - name: Find Bevy metadata
        id: bevy-metadata
        run: |
          # Find the version and source properties of Bevy.
          METADATA=$(cargo metadata --format-version 1 | jq '.packages[] | select(.name == "bevy") | { version, source }')

          echo Bevy metadata is $METADATA.

          echo metadata=$METADATA >> $GITHUB_OUTPUT

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: results.txt
          if-no-files-found: error

      - name: Upload Criterion report
        uses: actions/upload-artifact@v4
        with:
          name: criterion-report
          path: target/criterion
          if-no-files-found: error

      - name: Sweep target folder
        run: cargo sweep --file

  file-size:
    name: Track file size
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Configure Bevy revision
        if: ${{ inputs.bevy-dep }}
        env:
          BEVY_DEP: ${{ inputs.bevy-dep }}
        run: |
          # Update the Bevy dependency in `Cargo.toml` to specified value.
          sed -i "s|bevy = { git = \"https://github.com/bevyengine/bevy.git\" }|bevy = $BEVY_DEP|" Cargo.toml

      - name: Cache build files
        uses: Leafwing-Studios/cargo-cache@v2

      - name: Install cargo-sweep and timestamp
        run: |
          cargo install cargo-sweep --force
          cargo sweep --stamp

      # Build all file-size binaries in release mode.
      - name: Build binaries
        run: cargo build --package file-size --profile file-size

      # TODO: Find Bevy hash and ensure it is equal to the one found in `bench`.

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: file-size
          path: |
            target/file-size/default
            target/file-size/minimal
            target/file-size/empty
          if-no-files-found: error

      - name: Sweep target folder
        run: cargo sweep --file
